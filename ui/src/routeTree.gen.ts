/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as LoadingImport } from './routes/loading'
import { Route as FooImport } from './routes/foo'
import { Route as AboutImport } from './routes/about'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth.index'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LoadingRoute = LoadingImport.update({
  id: '/loading',
  path: '/loading',
  getParentRoute: () => rootRoute,
} as any)

const FooRoute = FooImport.update({
  id: '/foo',
  path: '/foo',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/foo': {
      id: '/foo'
      path: '/foo'
      fullPath: '/foo'
      preLoaderRoute: typeof FooImport
      parentRoute: typeof rootRoute
    }
    '/loading': {
      id: '/loading'
      path: '/loading'
      fullPath: '/loading'
      preLoaderRoute: typeof LoadingImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/foo': typeof FooRoute
  '/loading': typeof LoadingRoute
  '/login': typeof LoginRoute
  '/': typeof AuthIndexRoute
}

export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/foo': typeof FooRoute
  '/loading': typeof LoadingRoute
  '/login': typeof LoginRoute
  '/': typeof AuthIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/foo': typeof FooRoute
  '/loading': typeof LoadingRoute
  '/login': typeof LoginRoute
  '/_auth/': typeof AuthIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/about' | '/foo' | '/loading' | '/login' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/foo' | '/loading' | '/login' | '/'
  id:
    | '__root__'
    | '/_auth'
    | '/about'
    | '/foo'
    | '/loading'
    | '/login'
    | '/_auth/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  AboutRoute: typeof AboutRoute
  FooRoute: typeof FooRoute
  LoadingRoute: typeof LoadingRoute
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  AboutRoute: AboutRoute,
  FooRoute: FooRoute,
  LoadingRoute: LoadingRoute,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/about",
        "/foo",
        "/loading",
        "/login"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/foo": {
      "filePath": "foo.tsx"
    },
    "/loading": {
      "filePath": "loading.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/": {
      "filePath": "_auth.index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
